<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Counting on MeelGroup</title>
    <link>/tags/counting/</link>
    <description>Recent content in Counting on MeelGroup</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy; 2019</copyright>
    <lastBuildDate>Sat, 15 Jun 2019 00:00:00 +0530</lastBuildDate>
    
	<atom:link href="/tags/counting/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>GANAK</title>
      <link>/software/ganak/</link>
      <pubDate>Sat, 15 Jun 2019 00:00:00 +0530</pubDate>
      
      <guid>/software/ganak/</guid>
      <description>Given a Boolean formula $F$, the problem of model counting, also referred to as #SAT, seeks to compute the number of solutions of $F$. Model counting is a fundamental problem with a wide variety of applications ranging from planning, quantified information flow to probabilistic reasoning and the like. The modern #SAT solvers tend to be either based on static decomposition, dynamic decomposition, or a hybrid of the two. Despite dynamic decomposition based #SAT solvers sharing much of their architecture with SAT solvers, the core design and heuristics of dynamic decomposition-based #SAT solvers has remained constant for over a decade.</description>
    </item>
    
  </channel>
</rss>